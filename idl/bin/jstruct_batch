; idl batch script - 'jsheet_batch' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
;                                                                              ;
; Author: Timothy J. Dennis                                                    ;
;         tdennis@gi.alaska.edu                                                ;
;                                                                              ;
; Developed for use with the family of Heliospheric Physics codes originating  ;
; with the work of C.S. Ng and including 'rmct_np' and 'fourfields.'           ;
;                                                                              ;
; Description: This is a batch script to be read into an instantiation of IDL  ;
;              running on a compute node. The reading in of this script        ;
;              (and the instantiation of IDL on the compute node) is           ;
;              accomplished via the execution of a 'parent' c-shell script     ;
;              called 'jsheet_idl.s'. Prospective users are forewarned not to try ;
;              'feeding' this script to IDL any other way unless they know     ;
;              what they're doing. Otherwise confusion and frustration are     ;
;              certain to ensue. You're much better off reading the            ;
;              documentation in jsheet_idl.s first.                            ;
;                                                                              ;
;              The purpose of this script is to execute the IDL procedure      ;
;              'jsheet' which produces                                         ;
;                                                                              ;
;                                                                              ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;


; In the calling script, 'jsheet_idl.s', several environment variables are set
; as a means of passing these variables as arguments or 'keyword' parameters
; to 'jsheet'. This batch script accesses these
; environment variables and uses them to define the parameters to be passed.

idl_src_dir  = GETENV('IDL_PATH')        ; Directory where the required IDL
                                         ; sources reside
threshold    = GETENV('JSHT_THRSH')      ;
action       = GETENV('JSHT_ACTION')     ;
first_step   = GETENV('JSHT_FIRST_STP')  ; first time step   in time-series
last_step    = GETENV('JSHT_LAST_STP')   ; last  time step   in time-series
first_slice  = GETENV('JSHT_FIRST_SLC')  ; first data-slice  in each time-step
last_slice   = GETENV('JSHT_LAST_SLC')   ; last  data-slice  in each time-step
yrot         = GETENV('JSHT_Y_ROT')      ; angle of rotation about y axin
n_cntrs      = GETENV('JSHT_N_CNTRS')    ; number of contours and/or isosurfaces
IF (STRLEN(n_cntrs) EQ 0) THEN n_cntrs = 0 ; set to zero if not in argument list
qty          = GETENV('JSHT_QTY')        ; which field to plot
desc_label   = GETENV('JSHT_DESC_LABEL') ; descriptive "run label"
res_str      = GETENV('JSHT_RES_STR')    ; resolution string
glb_ext      = GETENV('JSHT_GLB_EXT')    ; resolution string

threshold   = FLOAT(threshold)
first_step  = UINT(first_step)
last_step   = UINT(last_step)
first_slice = UINT(first_slice)
last_slice  = UINT(last_slice)

; The next step after obtaining arguments is to compile the required sources  ;
; The order of compilation reflects the various dependencies of the sources   ;
; upon one another                                                            ;

.run scan_parameters.pro
.run getResString.pro
.run getInfixString.pro
.run init_jvox.pro
.run fetch_datafile.pro
.run calcKK.pro
.run fetch_layer.pro
.run getSliceRange.pro
.run global_q_minmax_by_slice.pro
.run global_q_minmax.pro
.run calc_flt_Jsqr.pro
.run fill_jvox.pro
.run getCoordConvs.pro
.run getOutputPath.pro
.run makeContourPlot.pro
.run jMask.pro
.run getColorTables.pro
.run makeVolume.pro
.run getTitle.pro
.run makeAxes.pro
.run jstruct.pro
                                                                               ;
; Next we tell idl to add 'idl_src_dir' to its value for IDL_PATH. I don't     ;
; completely understand this - particularly since it comes after               ;
; the compilation, but it's essential                                          ;

PREF_SET, 'IDL_PATH', 'idl_src_dir:<IDL_DEFAULT>', /COMMIT

; Next we set the keyword values - note some cruft here:                       ;
;                                                                              ;

preval  ='rmct2'
lab_run = desc_label

  jstruct, qty,          $
           lab_run,      $
           action,       $
           first_step,   $
           last_step,    $
           first_slice,  $
           last_slice,   $
           threshold,    $
           preval,       $
           yrot,         $
           n_cntrs,      $
           glb_ext
retall

exit
