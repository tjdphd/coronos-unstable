; idl batch script - 'tomo_batch' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;
;                                                                               ;
; Author: Timothy J. Dennis                                                     ;
;         tdennis@gi.alaska.edu                                                 ;
;                                                                               ;
; Developed for use with the family of Heliospheric Physics codes originating   ;
; with the work of C.S. Ng and including 'rmct_np' and 'fourfields.'            ;
;                                                                               ;
; Description: This is a batch script to be read into an instantiation of IDL   ;
;              running on a compute node. The reading in of this script         ;
;              (and the instantiation of IDL on the compute node) is            ;
;              accomplished via the execution of a 'parent' c-shell script      ;
;              called 'tomo_idl.s'. Prospective users are forewarned not to try ;
;              'feeding' this script to IDL any other way unless they know      ;
;              what they're doing. Otherwise confusion and frustration are      ;
;              certain to ensue. You're much better off reading the             ;
;              documentation in tomo_idl.s first.                               ;
;                                                                               ;
;              The purpose of this script is to execute the IDL procedure       ;
;              'single_time_contour_tomography_series' which produces a slice-  ;
;              ordered set of contour plots/color maps for a given time-step or ;
;              (perpendicular to the z-direction) of the simulation             ;
;              volume within which the equations of Reduced MHD (RMHD) or       ;
;              the 'Four-Field' equations (FF - a generalization of RMHD to     ;
;              include Hall MHD ) are solved.                                   ;
;                                                                               ;
;              The contour plots/color maps produced are of one of the five     ;
;              Following quantities, (as determined by the value of the         ;
;              variable 'cont_fld' also listed):                                ;
;                                                                               ;
;              Field                                 cont_fld  Model Eq.'s      ;
;                                                                               ;
;              phi - 'Stream Function'               'p'       RMHD/FF          ;
;              A   - 'Flux Function'                 'a'       RMHD/FF          ;
;              J   - 'Current Density (z-comp)       'j'       RMHD/FF          ;
;                                                                               ;
;              Z   - 'B-field fluctations (z-comp)   'bz'      FF               ;
;              V   - 'Velocity fluctuations (z-comp) 'vz'      FF               ;
;                                                                               ;
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;


; In the calling script, 'tomo_idl.s', several environment variables are set
; as a means of passing these variables as arguments or 'keyword' parameters
; to 'tomo_single_tim_contour_tomography_series'. This batch script accesses these
; environment variables and uses them to define the parameters to be passed.

idl_src_dir = GETENV('IDL_PATH')          ; Directory where the required IDL
                                          ; sources reside
cont_fld    = GETENV('TOMO_CONT_FLD')     ; field for which contours/color maps
                                          ; will be generated (see description)
desc_label  = GETENV('TOMO_DESC_LABEL')   ; descriptive "run label"
num_cont    = GETENV('TOMO_NUM_CONT')     ; Number of contour levels for plots
first_slice = GETENV('TOMO_FIRST_SLICE')  ; first data-frame in time-series
last_slice  = GETENV('TOMO_LAST_SLICE')   ; last data-frame in time-series
tot_slcs    = GETENV('TOMO_TOT_SLCS')     ; total number of steps upon which to
                                          ; base contour levels
n_step      = GETENV('TOMO_STP')          ; which slice to contour
first_slice = UINT(first_slice)           ; convert these to 
last_slice  = UINT(last_slice)            ; integer values
tot_slcs    = UINT(tot_slcs)
n_step      = UINT(n_step)

print, 'tomo_batch: n_step      = ', n_step
print, 'tomo_batch: first_slice = ', first_slice
print, 'tomo_batch: last_slice  = ', last_slice

; The next step after obtaining arguments is to compile the required sources  ;
; The order of compilation reflects the various dependencies of the sources   ;
; upon one another                                                            ;

.run scan_parameters.pro
.run construct_eps_outfile_name.pro
.run fetch_datafile.pro
.run fetch_slices.pro
.run max_q_by_slice.pro
.run min_q_by_slice.pro
.run set_levels_by_slice.pro
.run calc_jz.pro
.run cfdp.pro
.run construct_contour.pro
.run single_time_contour_tomography_series.pro 
                                                                               ;
; Next we tell idl to add 'idl_src_dir' to its value for IDL_PATH. I don't     ;
; completely understand this - particularly since it comes after               ;
; the compilation, but it's essential                                          ;

PREF_SET, 'IDL_PATH', 'idl_src_dir:<IDL_DEFAULT>', /COMMIT

; Next we set the keyword values - note some cruft here:                       ;
;                                                                              ;
;  1.) some needed parameters are still hard-coded rather than passed via EV's ;
;      this should be fixed.                                                   ;
;                                                                              ;
;  2.) seems like this could be streamlined by just putting the above-defined  ;
;      variables in the appropriate places                                     ;
;                                                                              ;

preval  = 'rmct2'                                  ; to be soft-coded
str_res = 'y'                                      ; to be ELIMINATED
lab_run = desc_label                          
qty     = cont_fld
n_cntrs =  num_cont
out_dir = GETENV('PWD') + '/tomo/' + qty + '/eps'   ; to be soft-coded - maybe

single_time_contour_tomography_series, first_slice, last_slice, $
                                       preval,    /INC_PREFIX,  $
                                       str_res,   /INC_RES_STR, $
                                       lab_run,   /INC_RUN_LAB, $
                                       out_dir,   /INC_OUT_DIR, $
                                       n_step,    /INC_N_SLC,   $
                                       qty,       /INC_QTY,     $
                                       n_cntrs,   /INC_N_CNTRS, $
                                       tot_slcs,  /INC_TOT_SLCS
retall
exit
